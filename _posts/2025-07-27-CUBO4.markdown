---
layout: post
title: "Mathbox Cube"
date: 2025-07-20
---
CUBO4

<script>
      // Color Cube by Max Goldstein, CC-BY
      mathbox = MathBox.mathBox({
        plugins: ["core", "controls", "cursor"],
        controls: {
          klass: THREE.OrbitControls,
        },
        camera: {},
      });

      three = mathbox.three;
      three.controls.maxDistance = 4;
      three.camera.position.set(2.5, 1, 2.5);
      three.renderer.setClearColor(new THREE.Color(0xeeeeee), 1.0);

      view = mathbox
        .set({
          scale: 720,
          focus: 1,
        })
        .cartesian({
          range: [[-1.5, 1.5], [-1.5, 1.5], [-1.5, 1.5]],
      scale: [1, 1, 1],
        });

      // Add a time-uniform rotation transform (Y-axis rotation)
const rotating = view
  .transform({
    rotation: (t) => {
      return [
        Math.cos(t), 0, Math.sin(t),
        0,           1, 0,
       -Math.sin(t), 0, Math.cos(t)
      ];
    }
  });

rotating
  .area({
    width: 64,
    height: 32,
    expr: (emit, u, v, t) => {
      const theta = u * Math.PI;
      const phi = v * 2 * Math.PI;
      const r = 1;

      const x = r * Math.sin(theta) * Math.cos(phi);
      const y = r * Math.sin(theta) * Math.sin(phi);
      const z = r * Math.cos(theta);

      emit(x, y, z);
    }
  })
  .surface({
    color: 0x6699ff,
    shaded: true,
    opacity: 0.8,
    lineX: true,
    lineY: true
  });

    </script>
